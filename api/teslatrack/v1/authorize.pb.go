// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v5.29.3
// source: teslatrack/v1/authorize.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The request message for creating a new authorization client.
type CreateAuthorizeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The client identifier. Must be unique.
	ClientId string `protobuf:"bytes,1,opt,name=clientId,proto3" json:"clientId,omitempty"`
	// The client secret. A confidential value.
	ClientSecret string `protobuf:"bytes,2,opt,name=clientSecret,proto3" json:"clientSecret,omitempty"`
	// The grant type the client is allowed to use (e.g., "authorization_code").
	GrantType string `protobuf:"bytes,3,opt,name=grantType,proto3" json:"grantType,omitempty"`
	// The URI to redirect to after authorization.
	RedirectURI string `protobuf:"bytes,4,opt,name=redirectURI,proto3" json:"redirectURI,omitempty"`
}

func (x *CreateAuthorizeRequest) Reset() {
	*x = CreateAuthorizeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teslatrack_v1_authorize_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAuthorizeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAuthorizeRequest) ProtoMessage() {}

func (x *CreateAuthorizeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teslatrack_v1_authorize_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAuthorizeRequest.ProtoReflect.Descriptor instead.
func (*CreateAuthorizeRequest) Descriptor() ([]byte, []int) {
	return file_teslatrack_v1_authorize_proto_rawDescGZIP(), []int{0}
}

func (x *CreateAuthorizeRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *CreateAuthorizeRequest) GetClientSecret() string {
	if x != nil {
		return x.ClientSecret
	}
	return ""
}

func (x *CreateAuthorizeRequest) GetGrantType() string {
	if x != nil {
		return x.GrantType
	}
	return ""
}

func (x *CreateAuthorizeRequest) GetRedirectURI() string {
	if x != nil {
		return x.RedirectURI
	}
	return ""
}

// The reply message for CreateAuthorize. Currently empty.
type CreateAuthorizeReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateAuthorizeReply) Reset() {
	*x = CreateAuthorizeReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teslatrack_v1_authorize_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAuthorizeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAuthorizeReply) ProtoMessage() {}

func (x *CreateAuthorizeReply) ProtoReflect() protoreflect.Message {
	mi := &file_teslatrack_v1_authorize_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAuthorizeReply.ProtoReflect.Descriptor instead.
func (*CreateAuthorizeReply) Descriptor() ([]byte, []int) {
	return file_teslatrack_v1_authorize_proto_rawDescGZIP(), []int{1}
}

// The request message for the authorization callback.
type CallbackRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The authorization code returned by the OAuth provider.
	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *CallbackRequest) Reset() {
	*x = CallbackRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teslatrack_v1_authorize_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CallbackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallbackRequest) ProtoMessage() {}

func (x *CallbackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teslatrack_v1_authorize_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallbackRequest.ProtoReflect.Descriptor instead.
func (*CallbackRequest) Descriptor() ([]byte, []int) {
	return file_teslatrack_v1_authorize_proto_rawDescGZIP(), []int{2}
}

func (x *CallbackRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

// The reply message for the authorization callback. Currently empty.
type CallbackReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CallbackReply) Reset() {
	*x = CallbackReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teslatrack_v1_authorize_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CallbackReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallbackReply) ProtoMessage() {}

func (x *CallbackReply) ProtoReflect() protoreflect.Message {
	mi := &file_teslatrack_v1_authorize_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallbackReply.ProtoReflect.Descriptor instead.
func (*CallbackReply) Descriptor() ([]byte, []int) {
	return file_teslatrack_v1_authorize_proto_rawDescGZIP(), []int{3}
}

// The request message for initiating an authorization redirect.
type RedirectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The client ID for which to initiate the authorization flow.
	ClientId string `protobuf:"bytes,1,opt,name=clientId,proto3" json:"clientId,omitempty"`
}

func (x *RedirectRequest) Reset() {
	*x = RedirectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teslatrack_v1_authorize_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RedirectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedirectRequest) ProtoMessage() {}

func (x *RedirectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teslatrack_v1_authorize_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RedirectRequest.ProtoReflect.Descriptor instead.
func (*RedirectRequest) Descriptor() ([]byte, []int) {
	return file_teslatrack_v1_authorize_proto_rawDescGZIP(), []int{4}
}

func (x *RedirectRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

// The reply message containing parameters for the authorization redirect URL.
type RedirectReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The requested scope of permissions.
	Scope string `protobuf:"bytes,1,opt,name=scope,proto3" json:"scope,omitempty"`
	// A random string generated to prevent CSRF attacks.
	State string `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
	// A random string generated to prevent replay attacks.
	Nonce string `protobuf:"bytes,3,opt,name=nonce,proto3" json:"nonce,omitempty"`
	// Whether to prompt the user for missing scopes.
	PromptMissingScopes bool `protobuf:"varint,4,opt,name=promptMissingScopes,proto3" json:"promptMissingScopes,omitempty"`
	// Whether to require all requested scopes to be granted.
	RequireRequestedScopes bool `protobuf:"varint,5,opt,name=requireRequestedScopes,proto3" json:"requireRequestedScopes,omitempty"`
	// The URI to which the provider will redirect the user.
	RedirectUri string `protobuf:"bytes,6,opt,name=redirectUri,proto3" json:"redirectUri,omitempty"`
}

func (x *RedirectReply) Reset() {
	*x = RedirectReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teslatrack_v1_authorize_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RedirectReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedirectReply) ProtoMessage() {}

func (x *RedirectReply) ProtoReflect() protoreflect.Message {
	mi := &file_teslatrack_v1_authorize_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RedirectReply.ProtoReflect.Descriptor instead.
func (*RedirectReply) Descriptor() ([]byte, []int) {
	return file_teslatrack_v1_authorize_proto_rawDescGZIP(), []int{5}
}

func (x *RedirectReply) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

func (x *RedirectReply) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *RedirectReply) GetNonce() string {
	if x != nil {
		return x.Nonce
	}
	return ""
}

func (x *RedirectReply) GetPromptMissingScopes() bool {
	if x != nil {
		return x.PromptMissingScopes
	}
	return false
}

func (x *RedirectReply) GetRequireRequestedScopes() bool {
	if x != nil {
		return x.RequireRequestedScopes
	}
	return false
}

func (x *RedirectReply) GetRedirectUri() string {
	if x != nil {
		return x.RedirectUri
	}
	return ""
}

var File_teslatrack_v1_authorize_proto protoreflect.FileDescriptor

var file_teslatrack_v1_authorize_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x74, 0x65, 0x73, 0x6c, 0x61, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x2f, 0x76, 0x31, 0x2f,
	0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x11, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x65, 0x73, 0x6c, 0x61, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x2e,
	0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61,
	0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x98, 0x01, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x67,
	0x72, 0x61, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x67, 0x72, 0x61, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x52, 0x49, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x52, 0x49, 0x22, 0x16, 0x0a, 0x14, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x25, 0x0a, 0x0f, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x0f, 0x0a, 0x0d, 0x43, 0x61,
	0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x2d, 0x0a, 0x0f, 0x52,
	0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xdd, 0x01, 0x0a, 0x0d, 0x52,
	0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x63, 0x6f,
	0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x30,
	0x0a, 0x13, 0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x53,
	0x63, 0x6f, 0x70, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x70, 0x72, 0x6f,
	0x6d, 0x70, 0x74, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x73,
	0x12, 0x36, 0x0a, 0x16, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x65, 0x64, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x16, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x65, 0x64, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x55, 0x72, 0x69, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72,
	0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x72, 0x69, 0x32, 0x80, 0x03, 0x0a, 0x09, 0x41,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x12, 0x83, 0x01, 0x0a, 0x0f, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x12, 0x29, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x74, 0x65, 0x73, 0x6c, 0x61, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x65,
	0x73, 0x6c, 0x61, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x22, 0x11, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x31, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x77,
	0x0a, 0x08, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x12, 0x22, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x74, 0x65, 0x73, 0x6c, 0x61, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x65, 0x73, 0x6c, 0x61, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x22, 0x1a, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x31, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x2f, 0x72, 0x65, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0x74, 0x0a, 0x08, 0x43, 0x61, 0x6c, 0x6c, 0x62,
	0x61, 0x63, 0x6b, 0x12, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x65, 0x73, 0x6c, 0x61, 0x74,
	0x72, 0x61, 0x63, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x65,
	0x73, 0x6c, 0x61, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x6c, 0x6c,
	0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x1c, 0x12, 0x1a, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x69, 0x7a, 0x65, 0x2f, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x42, 0x36, 0x0a,
	0x11, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x65, 0x73, 0x6c, 0x61, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x2e,
	0x76, 0x31, 0x50, 0x01, 0x5a, 0x1f, 0x74, 0x65, 0x73, 0x6c, 0x61, 0x74, 0x72, 0x61, 0x63, 0x6b,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x74, 0x65, 0x73, 0x6c, 0x61, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x2f,
	0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_teslatrack_v1_authorize_proto_rawDescOnce sync.Once
	file_teslatrack_v1_authorize_proto_rawDescData = file_teslatrack_v1_authorize_proto_rawDesc
)

func file_teslatrack_v1_authorize_proto_rawDescGZIP() []byte {
	file_teslatrack_v1_authorize_proto_rawDescOnce.Do(func() {
		file_teslatrack_v1_authorize_proto_rawDescData = protoimpl.X.CompressGZIP(file_teslatrack_v1_authorize_proto_rawDescData)
	})
	return file_teslatrack_v1_authorize_proto_rawDescData
}

var file_teslatrack_v1_authorize_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_teslatrack_v1_authorize_proto_goTypes = []interface{}{
	(*CreateAuthorizeRequest)(nil), // 0: api.teslatrack.v1.CreateAuthorizeRequest
	(*CreateAuthorizeReply)(nil),   // 1: api.teslatrack.v1.CreateAuthorizeReply
	(*CallbackRequest)(nil),        // 2: api.teslatrack.v1.CallbackRequest
	(*CallbackReply)(nil),          // 3: api.teslatrack.v1.CallbackReply
	(*RedirectRequest)(nil),        // 4: api.teslatrack.v1.RedirectRequest
	(*RedirectReply)(nil),          // 5: api.teslatrack.v1.RedirectReply
}
var file_teslatrack_v1_authorize_proto_depIdxs = []int32{
	0, // 0: api.teslatrack.v1.Authorize.CreateAuthorize:input_type -> api.teslatrack.v1.CreateAuthorizeRequest
	4, // 1: api.teslatrack.v1.Authorize.Redirect:input_type -> api.teslatrack.v1.RedirectRequest
	2, // 2: api.teslatrack.v1.Authorize.Callback:input_type -> api.teslatrack.v1.CallbackRequest
	1, // 3: api.teslatrack.v1.Authorize.CreateAuthorize:output_type -> api.teslatrack.v1.CreateAuthorizeReply
	5, // 4: api.teslatrack.v1.Authorize.Redirect:output_type -> api.teslatrack.v1.RedirectReply
	3, // 5: api.teslatrack.v1.Authorize.Callback:output_type -> api.teslatrack.v1.CallbackReply
	3, // [3:6] is the sub-list for method output_type
	0, // [0:3] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_teslatrack_v1_authorize_proto_init() }
func file_teslatrack_v1_authorize_proto_init() {
	if File_teslatrack_v1_authorize_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_teslatrack_v1_authorize_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAuthorizeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teslatrack_v1_authorize_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAuthorizeReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teslatrack_v1_authorize_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CallbackRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teslatrack_v1_authorize_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CallbackReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teslatrack_v1_authorize_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RedirectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teslatrack_v1_authorize_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RedirectReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_teslatrack_v1_authorize_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_teslatrack_v1_authorize_proto_goTypes,
		DependencyIndexes: file_teslatrack_v1_authorize_proto_depIdxs,
		MessageInfos:      file_teslatrack_v1_authorize_proto_msgTypes,
	}.Build()
	File_teslatrack_v1_authorize_proto = out.File
	file_teslatrack_v1_authorize_proto_rawDesc = nil
	file_teslatrack_v1_authorize_proto_goTypes = nil
	file_teslatrack_v1_authorize_proto_depIdxs = nil
}
