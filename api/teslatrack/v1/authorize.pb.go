// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        v5.29.3
// source: teslatrack/v1/authorize.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The request message for creating a new authorization client.
type CreateAuthorizeRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The client identifier. Must be unique.
	ClientId string `protobuf:"bytes,1,opt,name=clientId,proto3" json:"clientId,omitempty"`
	// The client secret. A confidential value.
	ClientSecret string `protobuf:"bytes,2,opt,name=clientSecret,proto3" json:"clientSecret,omitempty"`
	// The grant type the client is allowed to use (e.g., "authorization_code").
	GrantType string `protobuf:"bytes,3,opt,name=grantType,proto3" json:"grantType,omitempty"`
	// The URI to redirect to after authorization.
	RedirectURI   string `protobuf:"bytes,4,opt,name=redirectURI,proto3" json:"redirectURI,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateAuthorizeRequest) Reset() {
	*x = CreateAuthorizeRequest{}
	mi := &file_teslatrack_v1_authorize_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateAuthorizeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAuthorizeRequest) ProtoMessage() {}

func (x *CreateAuthorizeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teslatrack_v1_authorize_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAuthorizeRequest.ProtoReflect.Descriptor instead.
func (*CreateAuthorizeRequest) Descriptor() ([]byte, []int) {
	return file_teslatrack_v1_authorize_proto_rawDescGZIP(), []int{0}
}

func (x *CreateAuthorizeRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *CreateAuthorizeRequest) GetClientSecret() string {
	if x != nil {
		return x.ClientSecret
	}
	return ""
}

func (x *CreateAuthorizeRequest) GetGrantType() string {
	if x != nil {
		return x.GrantType
	}
	return ""
}

func (x *CreateAuthorizeRequest) GetRedirectURI() string {
	if x != nil {
		return x.RedirectURI
	}
	return ""
}

// The reply message for CreateAuthorize. Currently empty.
type CreateAuthorizeReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateAuthorizeReply) Reset() {
	*x = CreateAuthorizeReply{}
	mi := &file_teslatrack_v1_authorize_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateAuthorizeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAuthorizeReply) ProtoMessage() {}

func (x *CreateAuthorizeReply) ProtoReflect() protoreflect.Message {
	mi := &file_teslatrack_v1_authorize_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAuthorizeReply.ProtoReflect.Descriptor instead.
func (*CreateAuthorizeReply) Descriptor() ([]byte, []int) {
	return file_teslatrack_v1_authorize_proto_rawDescGZIP(), []int{1}
}

// The request message for the authorization callback.
type CallbackRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The authorization code returned by the OAuth provider.
	Code          string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CallbackRequest) Reset() {
	*x = CallbackRequest{}
	mi := &file_teslatrack_v1_authorize_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CallbackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallbackRequest) ProtoMessage() {}

func (x *CallbackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teslatrack_v1_authorize_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallbackRequest.ProtoReflect.Descriptor instead.
func (*CallbackRequest) Descriptor() ([]byte, []int) {
	return file_teslatrack_v1_authorize_proto_rawDescGZIP(), []int{2}
}

func (x *CallbackRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

// The reply message for the authorization callback. Currently empty.
type CallbackReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CallbackReply) Reset() {
	*x = CallbackReply{}
	mi := &file_teslatrack_v1_authorize_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CallbackReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallbackReply) ProtoMessage() {}

func (x *CallbackReply) ProtoReflect() protoreflect.Message {
	mi := &file_teslatrack_v1_authorize_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallbackReply.ProtoReflect.Descriptor instead.
func (*CallbackReply) Descriptor() ([]byte, []int) {
	return file_teslatrack_v1_authorize_proto_rawDescGZIP(), []int{3}
}

// The request message for initiating an authorization redirect.
type RedirectRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The client ID for which to initiate the authorization flow.
	ClientId      string `protobuf:"bytes,1,opt,name=clientId,proto3" json:"clientId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RedirectRequest) Reset() {
	*x = RedirectRequest{}
	mi := &file_teslatrack_v1_authorize_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RedirectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedirectRequest) ProtoMessage() {}

func (x *RedirectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teslatrack_v1_authorize_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RedirectRequest.ProtoReflect.Descriptor instead.
func (*RedirectRequest) Descriptor() ([]byte, []int) {
	return file_teslatrack_v1_authorize_proto_rawDescGZIP(), []int{4}
}

func (x *RedirectRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

// The reply message containing parameters for the authorization redirect URL.
type RedirectReply struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The requested scope of permissions.
	Scope string `protobuf:"bytes,1,opt,name=scope,proto3" json:"scope,omitempty"`
	// A random string generated to prevent CSRF attacks.
	State string `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
	// A random string generated to prevent replay attacks.
	Nonce string `protobuf:"bytes,3,opt,name=nonce,proto3" json:"nonce,omitempty"`
	// Whether to prompt the user for missing scopes.
	PromptMissingScopes bool `protobuf:"varint,4,opt,name=promptMissingScopes,proto3" json:"promptMissingScopes,omitempty"`
	// Whether to require all requested scopes to be granted.
	RequireRequestedScopes bool `protobuf:"varint,5,opt,name=requireRequestedScopes,proto3" json:"requireRequestedScopes,omitempty"`
	// The URI to which the provider will redirect the user.
	RedirectUri   string `protobuf:"bytes,6,opt,name=redirectUri,proto3" json:"redirectUri,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RedirectReply) Reset() {
	*x = RedirectReply{}
	mi := &file_teslatrack_v1_authorize_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RedirectReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedirectReply) ProtoMessage() {}

func (x *RedirectReply) ProtoReflect() protoreflect.Message {
	mi := &file_teslatrack_v1_authorize_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RedirectReply.ProtoReflect.Descriptor instead.
func (*RedirectReply) Descriptor() ([]byte, []int) {
	return file_teslatrack_v1_authorize_proto_rawDescGZIP(), []int{5}
}

func (x *RedirectReply) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

func (x *RedirectReply) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *RedirectReply) GetNonce() string {
	if x != nil {
		return x.Nonce
	}
	return ""
}

func (x *RedirectReply) GetPromptMissingScopes() bool {
	if x != nil {
		return x.PromptMissingScopes
	}
	return false
}

func (x *RedirectReply) GetRequireRequestedScopes() bool {
	if x != nil {
		return x.RequireRequestedScopes
	}
	return false
}

func (x *RedirectReply) GetRedirectUri() string {
	if x != nil {
		return x.RedirectUri
	}
	return ""
}

var File_teslatrack_v1_authorize_proto protoreflect.FileDescriptor

const file_teslatrack_v1_authorize_proto_rawDesc = "" +
	"\n" +
	"\x1dteslatrack/v1/authorize.proto\x12\x11api.teslatrack.v1\x1a\x1cgoogle/api/annotations.proto\"\x98\x01\n" +
	"\x16CreateAuthorizeRequest\x12\x1a\n" +
	"\bclientId\x18\x01 \x01(\tR\bclientId\x12\"\n" +
	"\fclientSecret\x18\x02 \x01(\tR\fclientSecret\x12\x1c\n" +
	"\tgrantType\x18\x03 \x01(\tR\tgrantType\x12 \n" +
	"\vredirectURI\x18\x04 \x01(\tR\vredirectURI\"\x16\n" +
	"\x14CreateAuthorizeReply\"%\n" +
	"\x0fCallbackRequest\x12\x12\n" +
	"\x04code\x18\x01 \x01(\tR\x04code\"\x0f\n" +
	"\rCallbackReply\"-\n" +
	"\x0fRedirectRequest\x12\x1a\n" +
	"\bclientId\x18\x01 \x01(\tR\bclientId\"\xdd\x01\n" +
	"\rRedirectReply\x12\x14\n" +
	"\x05scope\x18\x01 \x01(\tR\x05scope\x12\x14\n" +
	"\x05state\x18\x02 \x01(\tR\x05state\x12\x14\n" +
	"\x05nonce\x18\x03 \x01(\tR\x05nonce\x120\n" +
	"\x13promptMissingScopes\x18\x04 \x01(\bR\x13promptMissingScopes\x126\n" +
	"\x16requireRequestedScopes\x18\x05 \x01(\bR\x16requireRequestedScopes\x12 \n" +
	"\vredirectUri\x18\x06 \x01(\tR\vredirectUri2\x80\x03\n" +
	"\tAuthorize\x12\x83\x01\n" +
	"\x0fCreateAuthorize\x12).api.teslatrack.v1.CreateAuthorizeRequest\x1a'.api.teslatrack.v1.CreateAuthorizeReply\"\x1c\x82\xd3\xe4\x93\x02\x16:\x01*\"\x11/api/v1/authorize\x12w\n" +
	"\bRedirect\x12\".api.teslatrack.v1.RedirectRequest\x1a .api.teslatrack.v1.RedirectReply\"%\x82\xd3\xe4\x93\x02\x1f:\x01*\"\x1a/api/v1/authorize/redirect\x12t\n" +
	"\bCallback\x12\".api.teslatrack.v1.CallbackRequest\x1a .api.teslatrack.v1.CallbackReply\"\"\x82\xd3\xe4\x93\x02\x1c\x12\x1a/api/v1/authorize/callbackB6\n" +
	"\x11api.teslatrack.v1P\x01Z\x1fteslatrack/api/teslatrack/v1;v1b\x06proto3"

var (
	file_teslatrack_v1_authorize_proto_rawDescOnce sync.Once
	file_teslatrack_v1_authorize_proto_rawDescData []byte
)

func file_teslatrack_v1_authorize_proto_rawDescGZIP() []byte {
	file_teslatrack_v1_authorize_proto_rawDescOnce.Do(func() {
		file_teslatrack_v1_authorize_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_teslatrack_v1_authorize_proto_rawDesc), len(file_teslatrack_v1_authorize_proto_rawDesc)))
	})
	return file_teslatrack_v1_authorize_proto_rawDescData
}

var file_teslatrack_v1_authorize_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_teslatrack_v1_authorize_proto_goTypes = []any{
	(*CreateAuthorizeRequest)(nil), // 0: api.teslatrack.v1.CreateAuthorizeRequest
	(*CreateAuthorizeReply)(nil),   // 1: api.teslatrack.v1.CreateAuthorizeReply
	(*CallbackRequest)(nil),        // 2: api.teslatrack.v1.CallbackRequest
	(*CallbackReply)(nil),          // 3: api.teslatrack.v1.CallbackReply
	(*RedirectRequest)(nil),        // 4: api.teslatrack.v1.RedirectRequest
	(*RedirectReply)(nil),          // 5: api.teslatrack.v1.RedirectReply
}
var file_teslatrack_v1_authorize_proto_depIdxs = []int32{
	0, // 0: api.teslatrack.v1.Authorize.CreateAuthorize:input_type -> api.teslatrack.v1.CreateAuthorizeRequest
	4, // 1: api.teslatrack.v1.Authorize.Redirect:input_type -> api.teslatrack.v1.RedirectRequest
	2, // 2: api.teslatrack.v1.Authorize.Callback:input_type -> api.teslatrack.v1.CallbackRequest
	1, // 3: api.teslatrack.v1.Authorize.CreateAuthorize:output_type -> api.teslatrack.v1.CreateAuthorizeReply
	5, // 4: api.teslatrack.v1.Authorize.Redirect:output_type -> api.teslatrack.v1.RedirectReply
	3, // 5: api.teslatrack.v1.Authorize.Callback:output_type -> api.teslatrack.v1.CallbackReply
	3, // [3:6] is the sub-list for method output_type
	0, // [0:3] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_teslatrack_v1_authorize_proto_init() }
func file_teslatrack_v1_authorize_proto_init() {
	if File_teslatrack_v1_authorize_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_teslatrack_v1_authorize_proto_rawDesc), len(file_teslatrack_v1_authorize_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_teslatrack_v1_authorize_proto_goTypes,
		DependencyIndexes: file_teslatrack_v1_authorize_proto_depIdxs,
		MessageInfos:      file_teslatrack_v1_authorize_proto_msgTypes,
	}.Build()
	File_teslatrack_v1_authorize_proto = out.File
	file_teslatrack_v1_authorize_proto_goTypes = nil
	file_teslatrack_v1_authorize_proto_depIdxs = nil
}
