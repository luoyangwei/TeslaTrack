// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// AuthorizeColumns holds the columns for the "authorize" table.
	AuthorizeColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "client_id", Type: field.TypeString},
		{Name: "client_secret", Type: field.TypeString},
		{Name: "grant_type", Type: field.TypeString},
		{Name: "redirect_uri", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted", Type: field.TypeBool, Default: false},
	}
	// AuthorizeTable holds the schema information for the "authorize" table.
	AuthorizeTable = &schema.Table{
		Name:       "authorize",
		Columns:    AuthorizeColumns,
		PrimaryKey: []*schema.Column{AuthorizeColumns[0]},
	}
	// AuthorizeTokenColumns holds the columns for the "authorize_token" table.
	AuthorizeTokenColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "tesla_code", Type: field.TypeString},
		{Name: "client_id", Type: field.TypeString},
		{Name: "client_secret", Type: field.TypeString},
		{Name: "access_token", Type: field.TypeString},
		{Name: "refresh_token", Type: field.TypeString},
		{Name: "scope", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted", Type: field.TypeBool, Default: false},
	}
	// AuthorizeTokenTable holds the schema information for the "authorize_token" table.
	AuthorizeTokenTable = &schema.Table{
		Name:       "authorize_token",
		Columns:    AuthorizeTokenColumns,
		PrimaryKey: []*schema.Column{AuthorizeTokenColumns[0]},
	}
	// PartnerColumns holds the columns for the "partner" table.
	PartnerColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "client_id", Type: field.TypeString},
		{Name: "access_token", Type: field.TypeString, Nullable: true},
		{Name: "expires_in", Type: field.TypeInt, Nullable: true},
		{Name: "token_type", Type: field.TypeString, Nullable: true, Size: 125},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted", Type: field.TypeBool, Default: false},
	}
	// PartnerTable holds the schema information for the "partner" table.
	PartnerTable = &schema.Table{
		Name:       "partner",
		Columns:    PartnerColumns,
		PrimaryKey: []*schema.Column{PartnerColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AuthorizeTable,
		AuthorizeTokenTable,
		PartnerTable,
	}
)

func init() {
	AuthorizeTable.Annotation = &entsql.Annotation{
		Table: "authorize",
	}
	AuthorizeTokenTable.Annotation = &entsql.Annotation{
		Table: "authorize_token",
	}
	PartnerTable.Annotation = &entsql.Annotation{
		Table: "partner",
	}
}
